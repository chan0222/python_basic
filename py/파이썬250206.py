# money = True
# if money :
#     print("택시타고가라")
# else:
#     print("걸어가")
## if 문 
## 수행할 문장들을 들여쓰기 하는 것을 무시하는 경우가 많으므로 더 주의 

##if 조건문 뒤에는 반드시 콜론(:)이 붙는다. 어떤 특별한 의미가 있다기보다는 파이썬의 문법 구조이다. 왜 하필 콜론(:)인지 궁금하다면 파이썬을 만든 귀도에게 직접 물어봐야 할 것이다. 앞으로 배울 while이나 for, def, class도 역시 문장의 끝에 콜론(:)이 항상 들어간다. 초보자들은 이 콜론(:)을 빠뜨리는 경우가 많으므로 특히 주의하자.

##파이썬이 다른 언어보다 보기 쉽고 소스 코드가 간결한 이유는 바로 콜론(:)을 사용하여 들여쓰기를 하도록 만들었기 때문이다. 하지만 이는 숙련된 프로그래머들이 파이썬을 처음 접할 때 제일 혼란스러워하는 부분이기도 하다. 다른 언어에서는 if 문에 속한 문장들을 {}로 감싸지만, 파이썬에서는 들여쓰기로 해결한다는 점을 기억하자.

## 예시 만약 3000원 이상의 돈을 가지고 잇으면 택시를 타고 가고, 그렇지 않으면 걸어가라

# money1 = 2000

# if money1 >= 3000:
#     print("택시")
# else:
#     print("걸어라")

# 또는(하나만 참이어도 참),그리고(모두 참),not (거짓이면 참)
# 돈이 3000원 이상 있거나 카드가 있다면 택시를 타고 가고, 그렇지 않으면 걸어가라.
# money = 2000
# card = True
# if money >= 3000 or card:
#     print("택시")
# else:
#     print("걸어라")

# in, not in
print(1 in [1,2,3]) # [1,2,3]이라는 리스트 안에 1이 있는가?
1 not in [1,2,3] #[1,2,3] 리스트안에 1이 없는가?

## 문제. 만약 주머니에 돈이 있으면 택시를 타고 가고, 없으면 걸어가라 
pocket = ["money","card"]
if "money" in pocket:
    print("택시타고 가")
else:
    print("걸어가)")

## 다양한 조건을 판단한 elif
##문제 주머니에 돈이 있으면 택시를 타고 가고, 주머니에 돈은 없지만 카드가 있으면 택시를 타고 가고, 돈도 없고 카드도 없으면 걸어가라.
# if 조건문:
#     수행할_문장1 
#     수행할_문장2
#     ...
# elif 조건문:
#     수행할_문장1
#     수행할_문장2
#     ...
# elif 조건문:
#     수행할_문장1
#     수행할_문장2
#     ...
# ...
# else:
#    수행할_문장1
#    수행할_문장2
#    ... 


# 조건부 표현식
# score가 60 이상일 경우 message에 문자열 "success", 아닐 경우에는 문자열 "failure"를 대입하는 코드

score = 50
if score >= 60:
    message = "success"
else:
    message = "failure"
# 조건부 표현식 

message = "success" if score >= 60 else "failure"
# 변수 = 조건문이_참인 경우의_값 if 조건문이 거짓인_경우의 값